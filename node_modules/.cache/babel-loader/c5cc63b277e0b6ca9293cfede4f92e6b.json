{"ast":null,"code":"var _jsxFileName = \"/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/deposits/IndexDeposits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getAllDeposits } from '../../api/deposits';\nimport { Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { indexDepositsSuccess, indexDepositsFailure } from '../shared/AutoDismissAlert/messages'; // I'm going to declare a style object\n// this will be used to corral my cards\n// we can use basic CSS, but we have to use JS syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cardContainerLayout = {\n  display: 'flex',\n  justifyContent: 'center',\n  flexFlow: 'row wrap'\n};\n\nconst IndexDeposits = props => {\n  _s();\n\n  const [deposits, setDeposits] = useState(null);\n  const {\n    user,\n    msgAlert\n  } = props;\n  useEffect(() => {\n    getAllDeposits().then(res => {\n      setDeposits(res.data.deposits);\n    }).then(() => {\n      msgAlert({\n        heading: 'Found some deposits!',\n        message: indexDepositsSuccess,\n        variant: 'success'\n      });\n    }).catch(() => {\n      msgAlert({\n        heading: 'No deposits?!!',\n        message: indexDepositsFailure,\n        variant: 'danger'\n      });\n    });\n  }, []);\n\n  if (!deposits) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  } else if (deposits.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no deposits yet, go add some\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n\n  let totalDeposits = 0;\n  deposits.forEach(deposit => {\n    totalDeposits += deposit.amount;\n  });\n\n  if (deposits.length > 0) {\n    depositTableItems = deposits.map(deposit =>\n    /*#__PURE__*/\n    // one method of styling, usually reserved for a single style\n    // we can use inline, just like in html\n    _jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: formatDate(new Date(deposit.date))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: deposit.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", deposit.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, deposit.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"page-title\",\n      children: \"All the deposits\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      id: \"myTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: depositTableItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total Deposits: $\", totalDeposits]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IndexDeposits, \"w22T/W8wv1olqq9EyU60vwqQJpA=\");\n\n_c = IndexDeposits;\nexport default IndexDeposits;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexDeposits\");","map":{"version":3,"sources":["/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/deposits/IndexDeposits.js"],"names":["React","useState","useEffect","getAllDeposits","Card","Link","indexDepositsSuccess","indexDepositsFailure","cardContainerLayout","display","justifyContent","flexFlow","IndexDeposits","props","deposits","setDeposits","user","msgAlert","then","res","data","heading","message","variant","catch","length","totalDeposits","forEach","deposit","amount","depositTableItems","map","formatDate","Date","date","description","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getAllDeposits } from '../../api/deposits'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {indexDepositsSuccess, indexDepositsFailure} from '../shared/AutoDismissAlert/messages'\n\n// I'm going to declare a style object\n// this will be used to corral my cards\n// we can use basic CSS, but we have to use JS syntax\nconst cardContainerLayout = {\n    display: 'flex',\n    justifyContent: 'center',\n    flexFlow: 'row wrap'\n}\n\nconst IndexDeposits = (props) => {\n    const [deposits, setDeposits] = useState(null)\n\n    const {user, msgAlert} = props\n\n    useEffect(() => {\n        getAllDeposits()\n            .then(res => {\n                setDeposits(res.data.deposits)\n            })\n            .then(() => {\n                msgAlert({\n                    heading: 'Found some deposits!',\n                    message: indexDepositsSuccess,\n                    variant: 'success',\n                })\n            })\n            .catch(() => {\n                msgAlert({\n                    heading: 'No deposits?!!',\n                    message: indexDepositsFailure,\n                    variant: 'danger',\n                })\n            })\n    }, [])\n\n    if (!deposits) {\n        return <p>loading...</p>\n    } else if (deposits.length === 0) {\n        return <p>no deposits yet, go add some</p>\n    }\n    let totalDeposits = 0\n    deposits.forEach(deposit => {\n        totalDeposits += deposit.amount\n    })\n    if (deposits.length > 0) {\n        depositTableItems = deposits.map(deposit => (\n            // one method of styling, usually reserved for a single style\n            // we can use inline, just like in html\n                <tr key={deposit.id}>\n                    <td>{formatDate(new Date(deposit.date))}</td>\n                    <td>{deposit.description}</td>\n                    <td>${deposit.amount}</td>\n                </tr>\n            \n        ))\n    }\n    return (\n        <>\n            <h3 className='page-title'>All the deposits</h3>\n            <Table striped bordered hover variant=\"dark\" id='myTable'>\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        {/* tried to make an onclick to sort by vendor name, not working */}\n                        {/* onClick={()=>sorting('vendor') */}\n                        <th>Description</th>\n                        <th>Amount</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {depositTableItems}\n                </tbody>\n            </Table>\n            \n            <div>Total Deposits: ${totalDeposits}</div>\n        </>\n    )\n}\n\nexport default IndexDeposits"]},"metadata":{},"sourceType":"module"}