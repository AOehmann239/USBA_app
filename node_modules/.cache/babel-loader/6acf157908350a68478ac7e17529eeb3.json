{"ast":null,"code":"var _jsxFileName = \"/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/expenses/ShowExpense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getOneExpense, updateExpense, removeExpense } from '../../api/expenses';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Spinner, Container, Card, Button } from 'react-bootstrap';\nimport { showExpenseSuccess, showExpenseFailure } from '../shared/AutoDismissAlert/messages';\nimport EditExpenseModal from './EditExpenseModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cardContainerLayout = {\n  display: 'flex',\n  justifyContent: 'center',\n  flexFlow: 'row wrap'\n};\n\nconst ShowExpense = props => {\n  _s();\n\n  const [expense, setExpense] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [updated, setUpdated] = useState(false);\n  const {\n    user,\n    msgAlert\n  } = props;\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  console.log('id in showExpense', id); // empty dependency array in useEffect to act like component did mount\n\n  useEffect(() => {\n    getOneExpense(id).then(res => setExpense(res.data.expense)).then(() => {\n      msgAlert({\n        heading: 'Here is the expense!',\n        message: showExpenseSuccess,\n        variant: 'success'\n      });\n    }).catch(() => {\n      msgAlert({\n        heading: 'No expense found',\n        message: showExpenseFailure,\n        variant: 'danger'\n      });\n    });\n  }, [updated]);\n\n  const removeTheExpense = () => {\n    removeExpense(user, expense.id).then(() => {\n      msgAlert({\n        heading: 'expense politely removed!',\n        message: 'theyre gone',\n        variant: 'success'\n      });\n    }).then(() => {\n      navigate(`/`);\n    }).catch(() => {\n      msgAlert({\n        heading: 'something went wrong',\n        message: 'that aint it',\n        variant: 'danger'\n      });\n    });\n  };\n\n  if (!expense) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        variant: \"warning\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this);\n  }\n\n  const padTo2Digits = num => {\n    return num.toString().padStart(2, '0');\n  };\n\n  const formatDate = date => {\n    return [padTo2Digits(date.getMonth() + 1), padTo2Digits(date.getDate()), date.getFullYear()].join('/');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      className: \"fluid\",\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n          children: formatDate(new Date(expense.date))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Vendor: \", expense.vendor]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Amount: \", expense.amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 68\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Description: \", expense.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Category: \", expense.category]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 72\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setModalOpen(true),\n            className: \"m-2\",\n            variant: \"warning\",\n            children: \"Edit Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => removeTheExpense(),\n            className: \"m-2\",\n            variant: \"danger\",\n            children: \"Delete Expense\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditExpenseModal, {\n      expense: expense,\n      show: modalOpen,\n      user: user,\n      msgAlert: msgAlert,\n      triggerRefresh: () => setUpdated(prev => !prev),\n      updateExpense: updateExpense,\n      handleClose: () => setModalOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowExpense, \"h3KNDSt4KKCHaud2wrWPDsx7/ZM=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ShowExpense;\nexport default ShowExpense;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowExpense\");","map":{"version":3,"sources":["/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/expenses/ShowExpense.js"],"names":["React","useState","useEffect","getOneExpense","updateExpense","removeExpense","useParams","useNavigate","Spinner","Container","Card","Button","showExpenseSuccess","showExpenseFailure","EditExpenseModal","cardContainerLayout","display","justifyContent","flexFlow","ShowExpense","props","expense","setExpense","modalOpen","setModalOpen","updated","setUpdated","user","msgAlert","id","navigate","console","log","then","res","data","heading","message","variant","catch","removeTheExpense","padTo2Digits","num","toString","padStart","formatDate","date","getMonth","getDate","getFullYear","join","Date","vendor","amount","description","category","prev"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { getOneExpense, updateExpense, removeExpense } from '../../api/expenses'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { Spinner, Container, Card, Button } from 'react-bootstrap'\nimport {showExpenseSuccess, showExpenseFailure} from '../shared/AutoDismissAlert/messages'\nimport EditExpenseModal from './EditExpenseModal'\n\nconst cardContainerLayout = {\n    display: 'flex',\n    justifyContent: 'center',\n    flexFlow: 'row wrap'\n}\n\nconst ShowExpense = (props) => {\n\n    const [expense, setExpense] = useState(null)\n    const [modalOpen, setModalOpen] = useState(false)\n    const [updated, setUpdated] = useState(false)\n    const {user, msgAlert} = props\n    const { id } = useParams()\n    const navigate = useNavigate()\n    console.log('id in showExpense', id)\n    // empty dependency array in useEffect to act like component did mount\n    useEffect(() => {\n        getOneExpense(id)\n            .then(res => setExpense(res.data.expense))\n            .then(() => {\n                msgAlert({\n                    heading: 'Here is the expense!',\n                    message: showExpenseSuccess,\n                    variant: 'success',\n                })\n            })\n            .catch(() => {\n                msgAlert({\n                    heading: 'No expense found',\n                    message: showExpenseFailure,\n                    variant: 'danger',\n                })\n            })\n    }, [updated])\n\n    const removeTheExpense = () => {\n        removeExpense(user, expense.id)\n            .then(() => {\n                msgAlert({\n                    heading: 'expense politely removed!',\n                    message: 'theyre gone',\n                    variant: 'success',\n                })\n            })\n            .then(() => {navigate(`/`)})\n            .catch(() => {\n                msgAlert({\n                    heading: 'something went wrong',\n                    message: 'that aint it',\n                    variant: 'danger',\n                })\n            })\n    }\n\n\n\n    if (!expense) {\n        return (\n            <Container fluid className=\"justify-content-center\">\n                <Spinner animation=\"border\" role=\"status\" variant=\"warning\" >\n                    <span className=\"visually-hidden\">Loading....</span>\n                </Spinner>\n            </Container>\n        )\n    }\n    const padTo2Digits = (num) => {\n        return num.toString().padStart(2, '0')\n    }\n    \n    const formatDate = (date) => {\n        return [\n            padTo2Digits(date.getMonth() + 1),\n            padTo2Digits(date.getDate()),\n            date.getFullYear(),\n        ].join('/');\n    }\n\n    return (\n\n        <>\n            <Container className=\"fluid\">\n                <Card>\n                    <Card.Header>{formatDate(new Date(expense.date))}</Card.Header>\n                    <Card.Body>\n                        <Card.Text>\n                            <small>Vendor: {expense.vendor}</small><br/>\n                            <small>Amount: {expense.amount}</small><br/>\n                            <small>Description: {expense.description}</small><br/>\n                            <small>Category: {expense.category}</small><br/>\n                           \n                        </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                        <Button onClick={() => setModalOpen(true)} className=\"m-2\" variant=\"warning\">\n                            Edit Expense\n                        </Button>\n                        <Button onClick={() => removeTheExpense()}className=\"m-2\" variant=\"danger\">\n                            Delete Expense\n                        </Button>\n\n                    </Card.Footer>\n                </Card>\n            </Container>\n            <EditExpenseModal \n                expense={expense}\n                show={modalOpen}\n                user={user}\n                msgAlert={msgAlert}\n                triggerRefresh={() => setUpdated(prev => !prev)}\n                updateExpense={updateExpense}\n                handleClose={() => setModalOpen(false)}\n            />\n        </>\n    )\n}\n\nexport default ShowExpense"]},"metadata":{},"sourceType":"module"}