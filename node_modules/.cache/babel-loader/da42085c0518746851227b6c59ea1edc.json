{"ast":null,"code":"var _jsxFileName = \"/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/deposits/EditDepositModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Modal } from 'react-bootstrap';\nimport DepositForm from '../shared/DepositForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditDepositModal = props => {\n  _s();\n\n  const {\n    user,\n    show,\n    handleClose,\n    updateDeposit,\n    msgAlert,\n    triggerRefresh\n  } = props;\n  const [deposit, setDeposit] = useState(props.deposit);\n\n  const handleChange = e => {\n    // e === event\n    e.persist();\n    setDeposit(prevDeposit => {\n      const name = e.target.name;\n      let value = e.target.value;\n      console.log('etarget type', e.target.type);\n      console.log('this is e.target checked', e.target.checked);\n\n      if (e.target.type === 'number') {\n        value = parseInt(e.target.value);\n      }\n\n      const updatedValue = {\n        [name]: value\n      };\n      console.log('prevDeposit', prevDeposit);\n      console.log('updatedValue', updatedValue);\n      return { ...prevDeposit,\n        ...updatedValue\n      };\n    });\n  };\n\n  const handleSubmit = e => {\n    // e === event\n    e.preventDefault();\n    console.log('the deposit to submit', deposit);\n    updateDeposit(user, deposit) // if create is successful, we should navigate to the show page\n    .then(() => handleClose()) // then we send a success message\n    .then(() => msgAlert({\n      heading: 'Deposit Updated! Success!',\n      message: 'u did it',\n      variant: 'success'\n    })).then(() => triggerRefresh()) // if there is an error, we'll send an error message\n    .catch(() => msgAlert({\n      heading: 'Oh No!',\n      message: 'that aint it',\n      variant: 'danger'\n    }));\n    console.log('this is the deposit', deposit);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(DepositForm, {\n        deposit: deposit,\n        handleChange: handleChange,\n        handleSubmit: handleSubmit,\n        heading: \"Edit deposit!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditDepositModal, \"PPq74HAH75nXrEBHtQw6gWxAtc4=\");\n\n_c = EditDepositModal;\nexport default EditDepositModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditDepositModal\");","map":{"version":3,"sources":["/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/deposits/EditDepositModal.js"],"names":["React","useState","Modal","DepositForm","EditDepositModal","props","user","show","handleClose","updateDeposit","msgAlert","triggerRefresh","deposit","setDeposit","handleChange","e","persist","prevDeposit","name","target","value","console","log","type","checked","parseInt","updatedValue","handleSubmit","preventDefault","then","heading","message","variant","catch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {Modal} from 'react-bootstrap'\nimport DepositForm from '../shared/DepositForm'\n\nconst EditDepositModal = (props) => {\n    const { user, show, handleClose, updateDeposit, msgAlert, triggerRefresh } = props\n    const [deposit, setDeposit] = useState(props.deposit)\n\n    const handleChange = (e) => {\n        // e === event\n        e.persist()\n\n        setDeposit(prevDeposit => {\n            const name = e.target.name\n            let value = e.target.value\n            console.log('etarget type', e.target.type)\n            console.log('this is e.target checked', e.target.checked)\n\n            if (e.target.type === 'number') {\n                value = parseInt(e.target.value)\n            }\n\n            const updatedValue = { [name]: value }\n\n            console.log('prevDeposit', prevDeposit)\n            console.log('updatedValue', updatedValue)\n\n            return {...prevDeposit, ...updatedValue}\n        })\n    }\n\n    const handleSubmit = (e) => {\n        // e === event\n        e.preventDefault()\n\n        console.log('the deposit to submit', deposit)\n        updateDeposit(user, deposit)\n            // if create is successful, we should navigate to the show page\n            .then(() => handleClose())\n            // then we send a success message\n            .then(() =>\n                msgAlert({\n                    heading: 'Deposit Updated! Success!',\n                    message: 'u did it',\n                    variant: 'success',\n                }))\n            .then(() => triggerRefresh())\n            // if there is an error, we'll send an error message\n            .catch(() =>\n                msgAlert({\n                    heading: 'Oh No!',\n                    message: 'that aint it',\n                    variant: 'danger',\n                }))\n        console.log('this is the deposit', deposit)\n    }\n\n    return (\n        <Modal show={show} onHide={handleClose}>\n            <Modal.Header closeButton></Modal.Header>\n            <Modal.Body>\n                <DepositForm \n                    deposit={deposit}\n                    handleChange={handleChange}\n                    handleSubmit={handleSubmit}\n                    heading=\"Edit deposit!\"\n                />\n            </Modal.Body>\n        </Modal>\n    )\n}\n    \nexport default EditDepositModal"]},"metadata":{},"sourceType":"module"}