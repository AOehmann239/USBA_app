{"ast":null,"code":"var _jsxFileName = \"/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/expenses/IndexExpenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport { getAllExpenses } from '../../api/expenses';\nimport { Card, Table, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { indexExpensesSuccess, indexExpensesFailure } from '../shared/AutoDismissAlert/messages'; // I'm going to declare a style object\n// this will be used to corral my cards\n// we can use basic CSS, but we have to use JS syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IndexExpenses = props => {\n  _s();\n\n  const [expenses, setExpenses] = useState(null);\n  const {\n    user,\n    msgAlert\n  } = props;\n  useEffect(() => {\n    getAllExpenses().then(res => {\n      setExpenses(res.data.expenses);\n    }).then(() => {\n      msgAlert({\n        heading: 'Found some expenses!',\n        message: indexExpensesSuccess,\n        variant: 'success'\n      });\n    }).catch(() => {\n      msgAlert({\n        heading: 'No expenses?!!',\n        message: indexExpensesFailure,\n        variant: 'danger'\n      });\n    });\n  }, []);\n\n  if (!expenses) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  } else if (expenses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no expenses yet, go add some\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n\n  const padTo2Digits = num => {\n    return num.toString().padStart(2, '0');\n  };\n\n  const formatDate = date => {\n    return [padTo2Digits(date.getMonth() + 1), padTo2Digits(date.getDate()), date.getFullYear()].join('/');\n  };\n\n  const columns = expenses[0] && Object.keys(expenses[0]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"page-title\",\n      children: \"All the expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      cellPadding: 0,\n      cellSpacing: 0,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: expenses[0] && columns.map(heading => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: heading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 66\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: expenses.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(column => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: row[column]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 51\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 42\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/expensesByCategory\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"app-select-button\",\n        id: \"button3\",\n        children: \"Breakdown By Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IndexExpenses, \"8iwiucXU+btIzRSKuqfN7oPeIBw=\");\n\n_c = IndexExpenses;\nexport default IndexExpenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexExpenses\");","map":{"version":3,"sources":["/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/expenses/IndexExpenses.js"],"names":["React","useState","useEffect","useTable","useSortBy","getAllExpenses","Card","Table","Button","Link","indexExpensesSuccess","indexExpensesFailure","IndexExpenses","props","expenses","setExpenses","user","msgAlert","then","res","data","heading","message","variant","catch","length","padTo2Digits","num","toString","padStart","formatDate","date","getMonth","getDate","getFullYear","join","columns","Object","keys","map","row","column"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAmC,aAAnC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,oBAAR,EAA8BC,oBAA9B,QAAyD,qCAAzD,C,CAEA;AACA;AACA;;;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAM;AAACe,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAmBJ,KAAzB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc,GACTa,IADL,CACUC,GAAG,IAAI;AACTJ,MAAAA,WAAW,CAACI,GAAG,CAACC,IAAJ,CAASN,QAAV,CAAX;AACH,KAHL,EAIKI,IAJL,CAIU,MAAM;AACRD,MAAAA,QAAQ,CAAC;AACLI,QAAAA,OAAO,EAAE,sBADJ;AAELC,QAAAA,OAAO,EAAEZ,oBAFJ;AAGLa,QAAAA,OAAO,EAAE;AAHJ,OAAD,CAAR;AAKH,KAVL,EAWKC,KAXL,CAWW,MAAM;AACTP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,OAAO,EAAE,gBADJ;AAELC,QAAAA,OAAO,EAAEX,oBAFJ;AAGLY,QAAAA,OAAO,EAAE;AAHJ,OAAD,CAAR;AAKH,KAjBL;AAkBH,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,MAAI,CAACT,QAAL,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAIA,QAAQ,CAACW,MAAT,KAAoB,CAAxB,EAA2B;AAC9B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACG,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1B,WAAOA,GAAG,CAACC,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAP;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,WAAO,CACHL,YAAY,CAACK,IAAI,CAACC,QAAL,KAAkB,CAAnB,CADT,EAEHN,YAAY,CAACK,IAAI,CAACE,OAAL,EAAD,CAFT,EAGHF,IAAI,CAACG,WAAL,EAHG,EAILC,IAJK,CAIA,GAJA,CAAP;AAKH,GAND;;AAOA,QAAMC,OAAO,GAAGtB,QAAQ,CAAC,CAAD,CAAR,IAAeuB,MAAM,CAACC,IAAP,CAAYxB,QAAQ,CAAC,CAAD,CAApB,CAA/B;AACJ,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,WAAW,EAAE,CAApB;AAAuB,MAAA,WAAW,EAAE,CAApC;AAAA,8BACI;AAAA,+BACI;AAAA,oBAAKA,QAAQ,CAAC,CAAD,CAAR,IAAesB,OAAO,CAACG,GAAR,CAAalB,OAAD,iBAAa;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBAAzB;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA,kBACKP,QAAQ,CAACyB,GAAT,CAAaC,GAAG,iBAAI;AAAA,oBAEbJ,OAAO,CAACG,GAAR,CAAYE,MAAM,iBAAI;AAAA,sBAAKD,GAAG,CAACC,MAAD;AAAR;AAAA;AAAA;AAAA;AAAA,kBAAtB;AAFa;AAAA;AAAA;AAAA;AAAA,gBAApB;AADL;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAgBI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAC,qBAAT;AAAA,6BACN,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,EAAE,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADM;AAAA;AAAA;AAAA;AAAA,YAhBJ;AAAA,kBADJ;AAsBH,CAjED;;GAAM7B,a;;KAAAA,a;AAmEN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {useTable, useSortBy } from 'react-table'\nimport { getAllExpenses } from '../../api/expenses'\nimport { Card, Table, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {indexExpensesSuccess, indexExpensesFailure} from '../shared/AutoDismissAlert/messages'\n\n// I'm going to declare a style object\n// this will be used to corral my cards\n// we can use basic CSS, but we have to use JS syntax\n\n\nconst IndexExpenses = (props) => {\n    const [expenses, setExpenses] = useState(null)\n\n    const {user, msgAlert} = props\n\n    useEffect(() => {\n        getAllExpenses()\n            .then(res => {\n                setExpenses(res.data.expenses)\n            })\n            .then(() => {\n                msgAlert({\n                    heading: 'Found some expenses!',\n                    message: indexExpensesSuccess,\n                    variant: 'success',\n                })\n            })\n            .catch(() => {\n                msgAlert({\n                    heading: 'No expenses?!!',\n                    message: indexExpensesFailure,\n                    variant: 'danger',\n                })\n            })\n    }, [])\n\n    if (!expenses) {\n        return <p>loading...</p>\n    } else if (expenses.length === 0) {\n        return <p>no expenses yet, go add some</p>\n    }\n        const padTo2Digits = (num) => {\n            return num.toString().padStart(2, '0')\n        }\n        \n        const formatDate = (date) => {\n            return [\n                padTo2Digits(date.getMonth() + 1),\n                padTo2Digits(date.getDate()),\n                date.getFullYear(),\n            ].join('/');\n        }\n        const columns = expenses[0] && Object.keys(expenses[0])\n    return (\n        <>\n            <h3 className='page-title'>All the expenses</h3>\n            \n\n            <table cellPadding={0} cellSpacing={0}>\n                <thead>\n                    <tr>{expenses[0] && columns.map((heading) => <th>{heading}</th>)}</tr>\n                </thead>\n                <tbody>\n                    {expenses.map(row => <tr>\n                        {\n                            columns.map(column => <td>{row[column]}</td>)\n                        }\n                        </tr>)}\n                </tbody>\n            </table>\n            <Link to=\"/expensesByCategory\">\n  \t\t\t\t<Button className='app-select-button' id='button3'>Breakdown By Category</Button>\n\t\t\t</Link>\n            </>\n    )\n}\n\nexport default IndexExpenses\n\n "]},"metadata":{},"sourceType":"module"}