{"ast":null,"code":"var _jsxFileName = \"/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/expenses/IndexExpenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport { getAllExpenses } from '../../api/expenses';\nimport { Table, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { indexExpensesSuccess, indexExpensesFailure } from '../shared/AutoDismissAlert/messages'; // I'm going to declare a style object\n// this will be used to corral my cards\n// we can use basic CSS, but we have to use JS syntax\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IndexExpenses = props => {\n  _s();\n\n  const [expenses, setExpenses] = useState(null);\n  const {\n    user,\n    msgAlert\n  } = props;\n  useEffect(() => {\n    getAllExpenses().then(res => {\n      setExpenses(res.data.expenses);\n    }).then(() => {\n      msgAlert({\n        heading: 'Found some expenses!',\n        message: indexExpensesSuccess,\n        variant: 'success'\n      });\n    }).catch(() => {\n      msgAlert({\n        heading: 'No expenses?!!',\n        message: indexExpensesFailure,\n        variant: 'danger'\n      });\n    });\n  }, []);\n\n  if (!expenses) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  } else if (expenses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no expenses yet, go add some\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 16\n    }, this);\n  }\n\n  const padTo2Digits = num => {\n    return num.toString().padStart(2, '0');\n  };\n\n  const formatDate = date => {\n    return [padTo2Digits(date.getMonth() + 1), padTo2Digits(date.getDate()), date.getFullYear()].join('/');\n  };\n\n  const columns = [{\n    dataField: \"date\",\n    text: \"Date\",\n    sort: true\n  }, {\n    dataField: \"vendor\",\n    text: \"Vendor\"\n  }, {\n    dataField: \"amount\",\n    text: \"Amount\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"page-title\",\n      children: \"All the expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, {\n      keyField: \"id\",\n      expenses: expenses,\n      columns: columns\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IndexExpenses, \"8iwiucXU+btIzRSKuqfN7oPeIBw=\");\n\n_c = IndexExpenses;\nexport default IndexExpenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexExpenses\");","map":{"version":3,"sources":["/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/expenses/IndexExpenses.js"],"names":["React","useState","useEffect","useTable","useSortBy","getAllExpenses","Table","Button","Link","BootstrapTable","indexExpensesSuccess","indexExpensesFailure","IndexExpenses","props","expenses","setExpenses","user","msgAlert","then","res","data","heading","message","variant","catch","length","padTo2Digits","num","toString","padStart","formatDate","date","getMonth","getDate","getFullYear","join","columns","dataField","text","sort"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAmC,aAAnC;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,SAAQC,oBAAR,EAA8BC,oBAA9B,QAAyD,qCAAzD,C,CAEA;AACA;AACA;;;;;AAGA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAM;AAACe,IAAAA,IAAD;AAAOC,IAAAA;AAAP,MAAmBJ,KAAzB;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,cAAc,GACTa,IADL,CACUC,GAAG,IAAI;AACTJ,MAAAA,WAAW,CAACI,GAAG,CAACC,IAAJ,CAASN,QAAV,CAAX;AACH,KAHL,EAIKI,IAJL,CAIU,MAAM;AACRD,MAAAA,QAAQ,CAAC;AACLI,QAAAA,OAAO,EAAE,sBADJ;AAELC,QAAAA,OAAO,EAAEZ,oBAFJ;AAGLa,QAAAA,OAAO,EAAE;AAHJ,OAAD,CAAR;AAKH,KAVL,EAWKC,KAXL,CAWW,MAAM;AACTP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,OAAO,EAAE,gBADJ;AAELC,QAAAA,OAAO,EAAEX,oBAFJ;AAGLY,QAAAA,OAAO,EAAE;AAHJ,OAAD,CAAR;AAKH,KAjBL;AAkBH,GAnBQ,EAmBN,EAnBM,CAAT;;AAqBA,MAAI,CAACT,QAAL,EAAe;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GAFD,MAEO,IAAIA,QAAQ,CAACW,MAAT,KAAoB,CAAxB,EAA2B;AAC9B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACG,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC1B,WAAOA,GAAG,CAACC,QAAJ,GAAeC,QAAf,CAAwB,CAAxB,EAA2B,GAA3B,CAAP;AACH,GAFD;;AAIA,QAAMC,UAAU,GAAIC,IAAD,IAAU;AACzB,WAAO,CACHL,YAAY,CAACK,IAAI,CAACC,QAAL,KAAkB,CAAnB,CADT,EAEHN,YAAY,CAACK,IAAI,CAACE,OAAL,EAAD,CAFT,EAGHF,IAAI,CAACG,WAAL,EAHG,EAILC,IAJK,CAIA,GAJA,CAAP;AAKH,GAND;;AAOA,QAAMC,OAAO,GAAG,CAAC;AACbC,IAAAA,SAAS,EAAC,MADG;AAEbC,IAAAA,IAAI,EAAE,MAFO;AAGbC,IAAAA,IAAI,EAAC;AAHQ,GAAD,EAKhB;AACIF,IAAAA,SAAS,EAAC,QADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GALgB,EAShB;AACID,IAAAA,SAAS,EAAC,QADd;AAEIC,IAAAA,IAAI,EAAE;AAFV,GATgB,CAAhB;AAaJ,sBACI;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,IAAzB;AAA8B,MAAA,QAAQ,EAAExB,QAAxC;AAAkD,MAAA,OAAO,EAAEsB;AAA3D;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAaH,CApED;;GAAMxB,a;;KAAAA,a;AAsEN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {useTable, useSortBy } from 'react-table'\nimport { getAllExpenses } from '../../api/expenses'\nimport { Table, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport BootstrapTable from 'react-bootstrap-table-next'\nimport {indexExpensesSuccess, indexExpensesFailure} from '../shared/AutoDismissAlert/messages'\n\n// I'm going to declare a style object\n// this will be used to corral my cards\n// we can use basic CSS, but we have to use JS syntax\n\n\nconst IndexExpenses = (props) => {\n    const [expenses, setExpenses] = useState(null)\n\n    const {user, msgAlert} = props\n\n    useEffect(() => {\n        getAllExpenses()\n            .then(res => {\n                setExpenses(res.data.expenses)\n            })\n            .then(() => {\n                msgAlert({\n                    heading: 'Found some expenses!',\n                    message: indexExpensesSuccess,\n                    variant: 'success',\n                })\n            })\n            .catch(() => {\n                msgAlert({\n                    heading: 'No expenses?!!',\n                    message: indexExpensesFailure,\n                    variant: 'danger',\n                })\n            })\n    }, [])\n\n    if (!expenses) {\n        return <p>loading...</p>\n    } else if (expenses.length === 0) {\n        return <p>no expenses yet, go add some</p>\n    }\n        const padTo2Digits = (num) => {\n            return num.toString().padStart(2, '0')\n        }\n        \n        const formatDate = (date) => {\n            return [\n                padTo2Digits(date.getMonth() + 1),\n                padTo2Digits(date.getDate()),\n                date.getFullYear(),\n            ].join('/');\n        }\n        const columns = [{\n            dataField:\"date\",\n            text: \"Date\",\n            sort:true\n        },\n        {\n            dataField:\"vendor\",\n            text: \"Vendor\"\n        },\n        {\n            dataField:\"amount\",\n            text: \"Amount\"\n        }]\n    return (\n        <>\n            <h3 className='page-title'>All the expenses</h3>\n            \n\n            <BootstrapTable keyField=\"id\" expenses={expenses} columns={columns} />\n\n                {/* <Link to=\"/expensesByCategory\">\n                    <Button className='app-select-button' id='button3'>Breakdown By Category</Button>\n                </Link> */}\n            \n        </>\n    )\n}\n\nexport default IndexExpenses\n\n "]},"metadata":{},"sourceType":"module"}