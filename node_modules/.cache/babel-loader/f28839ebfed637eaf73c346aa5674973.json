{"ast":null,"code":"var _jsxFileName = \"/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/expenses/IndexExpenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { getAllExpenses } from '../../api/expenses';\nimport { getAllDeposits } from '../../api/deposits';\nimport { Table, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { indexExpensesSuccess, indexExpensesFailure, indexDepositsFailure, indexDepositsSuccess } from '../shared/AutoDismissAlert/messages';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst IndexExpenses = props => {\n  _s();\n\n  const [expenses, setExpenses] = useState(null);\n  const [deposits, setDeposits] = useState(null);\n  const [order, setorder] = useState('ASC');\n  const {\n    user,\n    msgAlert\n  } = props;\n  useEffect(() => {\n    getAllExpenses().then(res => {\n      setExpenses(res.data.expenses);\n    }).then(() => {\n      msgAlert({\n        heading: 'Found some expenses!',\n        message: indexExpensesSuccess,\n        variant: 'success'\n      });\n    }).catch(() => {\n      msgAlert({\n        heading: 'No expenses?!!',\n        message: indexExpensesFailure,\n        variant: 'danger'\n      });\n    });\n  }, []);\n  useEffect(() => {\n    getAllDeposits().then(res => {\n      setDeposits(res.data.deposits);\n    }).then(() => {\n      msgAlert({\n        heading: 'Found some deposits!',\n        message: indexDepositsSuccess,\n        variant: 'success'\n      });\n    }).catch(() => {\n      msgAlert({\n        heading: 'No deposits?!!',\n        message: indexDepositsFailure,\n        variant: 'danger'\n      });\n    });\n  }, []);\n\n  if (!expenses) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  } else if (expenses.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no expenses yet, go add some\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (!deposits) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, this);\n  } else if (deposits.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"no deposits yet, go add some\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 16\n    }, this);\n  }\n\n  const padTo2Digits = num => {\n    return num.toString().padStart(2, '0');\n  };\n\n  const formatDate = date => {\n    return [padTo2Digits(date.getMonth() + 1), padTo2Digits(date.getDate()), date.getFullYear()].join('/');\n  };\n\n  let expenseTableItems;\n  let totalExpenses = 0;\n  let totalRentExp = 0;\n  let totalTranspExp = 0;\n  let totalGroceryExp = 0;\n  let totalUnnecessaryExp = 0;\n  let totalNecessaryExp = 0;\n  let totalOtherExp = 0;\n  let totalInvestExp = 0;\n  let totalDeposits = 0;\n  let netDinero = 0;\n  expenses.forEach(expense => {\n    if (expense.category === \"Rent/Utilities/Phone\") {\n      totalRentExp += expense.amount;\n    }\n\n    if (expense.category === \"Car/Transportation/Gas\") {\n      totalTranspExp += expense.amount;\n    }\n\n    if (expense.category === \"Groceries\") {\n      totalGroceryExp += expense.amount;\n    }\n\n    if (expense.category === \"Personal Necessary\") {\n      totalNecessaryExp += expense.amount;\n    }\n\n    if (expense.category === \"Personal Unnecessary\") {\n      totalUnnecessaryExp += expense.amount;\n    }\n\n    if (expense.category === \"Other\") {\n      totalOtherExp += expense.amount;\n    }\n\n    if (expense.category === \"Investment\") {\n      totalInvestExp += expense.amount;\n    }\n  });\n  expenses.forEach(expense => {\n    totalExpenses += expense.amount;\n  });\n  deposits.forEach(deposit => {\n    totalDeposits += deposit.amount;\n  });\n\n  if (expenses.length > 0) {\n    expenseTableItems = expenses.map(expense =>\n    /*#__PURE__*/\n    // one method of styling, usually reserved for a single style\n    // we can use inline, just like in html\n    _jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: formatDate(new Date(expense.date))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: expense.vendor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [\"$\", expense.amount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/expenses/${expense._id}`,\n          children: \"More info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 21\n      }, this)]\n    }, expense.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }, this));\n  } // const sorting = (col) => {\n  //     if (order === 'ASC'){\n  //         const sorted = [...expenses].sort((a, b) =>\n  //             a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1);\n  //         getAllExpenses(sorted)\n  //         setorder('DSC')\n  //     }\n  //     if (order === 'DSC'){\n  //         const sorted = [...expenses].sort((a, b) =>\n  //             a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1)\n  //         getAllExpenses(sorted)\n  //         setorder('ASC')\n  //     }\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"page-title\",\n      children: \"All the expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      variant: \"dark\",\n      id: \"myTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Vendor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: expenseTableItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/expensesByCategory\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        className: \"app-select-button\",\n        id: \"button3\",\n        children: \"Breakdown By Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total Expenses: $\", totalExpenses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"By Category--\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Rent/Utilities/Phone: $\", totalRentExp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Car/Transportation/Gas: $\", totalTranspExp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Groceries: $\", totalGroceryExp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Personal Necessary: $\", totalNecessaryExp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Personal Unnecessary: $\", totalUnnecessaryExp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Other: $\", totalOtherExp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Investment: $\", totalInvestExp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total deposits: $\", totalDeposits]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Net Dinero: $\", totalDeposits - totalExpenses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(IndexExpenses, \"ywhDQBmn3gahwMdxXM15xjTn85I=\");\n\n_c = IndexExpenses;\nexport default IndexExpenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndexExpenses\");","map":{"version":3,"sources":["/Users/andrewoehmann/sei/projects/bank_app/USBA_client/src/components/expenses/IndexExpenses.js"],"names":["React","useState","useEffect","getAllExpenses","getAllDeposits","Table","Button","Link","indexExpensesSuccess","indexExpensesFailure","indexDepositsFailure","indexDepositsSuccess","IndexExpenses","props","expenses","setExpenses","deposits","setDeposits","order","setorder","user","msgAlert","then","res","data","heading","message","variant","catch","length","padTo2Digits","num","toString","padStart","formatDate","date","getMonth","getDate","getFullYear","join","expenseTableItems","totalExpenses","totalRentExp","totalTranspExp","totalGroceryExp","totalUnnecessaryExp","totalNecessaryExp","totalOtherExp","totalInvestExp","totalDeposits","netDinero","forEach","expense","category","amount","deposit","map","Date","vendor","_id","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { getAllExpenses } from '../../api/expenses'\nimport { getAllDeposits } from '../../api/deposits'\nimport { Table, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport {indexExpensesSuccess, indexExpensesFailure, indexDepositsFailure, indexDepositsSuccess} from '../shared/AutoDismissAlert/messages'\n\nconst IndexExpenses = (props) => {\n    const [expenses, setExpenses] = useState(null)\n    const [deposits, setDeposits] = useState(null)\n    const [order, setorder] = useState('ASC')\n    const {user, msgAlert} = props\n\n    useEffect(() => {\n        getAllExpenses()\n            .then(res => {\n                setExpenses(res.data.expenses)\n            })\n            .then(() => {\n                msgAlert({\n                    heading: 'Found some expenses!',\n                    message: indexExpensesSuccess,\n                    variant: 'success',\n                })\n            })\n            .catch(() => {\n                msgAlert({\n                    heading: 'No expenses?!!',\n                    message: indexExpensesFailure,\n                    variant: 'danger',\n                })\n            })\n    }, [])\n    useEffect(() => {\n        getAllDeposits()\n            .then(res => {\n                setDeposits(res.data.deposits)\n            })\n            .then(() => {\n                msgAlert({\n                    heading: 'Found some deposits!',\n                    message: indexDepositsSuccess,\n                    variant: 'success',\n                })\n            })\n            .catch(() => {\n                msgAlert({\n                    heading: 'No deposits?!!',\n                    message: indexDepositsFailure,\n                    variant: 'danger',\n                })\n            })\n    }, [])\n    if (!expenses) {\n        return <p>loading...</p>\n    } else if (expenses.length === 0) {\n        return <p>no expenses yet, go add some</p>\n    }\n    if (!deposits) {\n        return <p>loading...</p>\n    } else if (deposits.length === 0) {\n        return <p>no deposits yet, go add some</p>\n    }\n    const padTo2Digits = (num) => {\n        return num.toString().padStart(2, '0')\n    }  \n    const formatDate = (date) => {\n        return [\n            padTo2Digits(date.getMonth() + 1),\n            padTo2Digits(date.getDate()),\n            date.getFullYear(),\n        ].join('/');\n    }\n    let expenseTableItems\n    let totalExpenses = 0\n    let totalRentExp = 0\n    let totalTranspExp = 0\n    let totalGroceryExp = 0\n    let totalUnnecessaryExp = 0\n    let totalNecessaryExp = 0\n    let totalOtherExp = 0\n    let totalInvestExp = 0\n    let totalDeposits = 0\n    let netDinero = 0\n   \n    expenses.forEach(expense => {\n        if (expense.category === \"Rent/Utilities/Phone\"){\n            totalRentExp += expense.amount\n        }\n        if (expense.category === \"Car/Transportation/Gas\"){\n            totalTranspExp += expense.amount\n        }\n        if (expense.category === \"Groceries\"){\n            totalGroceryExp += expense.amount\n        }\n        if (expense.category === \"Personal Necessary\"){\n            totalNecessaryExp += expense.amount\n        }\n        if (expense.category === \"Personal Unnecessary\"){\n            totalUnnecessaryExp += expense.amount\n        }\n        if (expense.category === \"Other\"){\n            totalOtherExp += expense.amount\n        }\n        if (expense.category === \"Investment\"){\n            totalInvestExp += expense.amount\n        }\n    })\n    expenses.forEach(expense => {\n        totalExpenses += expense.amount\n    })\n    deposits.forEach(deposit => {\n       totalDeposits += deposit.amount\n    })\n    if (expenses.length > 0) {\n        expenseTableItems = expenses.map(expense => (\n            // one method of styling, usually reserved for a single style\n            // we can use inline, just like in html\n                <tr key={expense.id}>\n                    <td>{formatDate(new Date(expense.date))}</td>\n                    <td>{expense.vendor}</td>\n                    <td>${expense.amount}</td>\n                    <td><Link to={`/expenses/${expense._id}`}>More info</Link></td>\n                </tr>\n            \n        ))\n    }\n        // const sorting = (col) => {\n        //     if (order === 'ASC'){\n        //         const sorted = [...expenses].sort((a, b) =>\n        //             a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1);\n        //         getAllExpenses(sorted)\n        //         setorder('DSC')\n        //     }\n        //     if (order === 'DSC'){\n        //         const sorted = [...expenses].sort((a, b) =>\n        //             a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1)\n        //         getAllExpenses(sorted)\n        //         setorder('ASC')\n        //     }\n        // }\n    return (\n        <>\n            <h3 className='page-title'>All the expenses</h3>\n            <Table striped bordered hover variant=\"dark\" id='myTable'>\n                <thead>\n                    <tr>\n                        <th>Date</th>\n                        {/* tried to make an onclick to sort by vendor name, not working */}\n                        {/* onClick={()=>sorting('vendor') */}\n                        <th>Vendor</th>\n                        <th>Amount</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {expenseTableItems}\n                </tbody>\n            </Table>\n            <Link to=\"/expensesByCategory\">\n  \t\t\t\t<Button className='app-select-button' id='button3'>Breakdown By Category</Button>\n\t\t\t</Link>\n            <div>Total Expenses: ${totalExpenses}</div>\n            <div>By Category--</div>\n            <div>Rent/Utilities/Phone: ${totalRentExp}</div>\n            <div>Car/Transportation/Gas: ${totalTranspExp}</div>\n            <div>Groceries: ${totalGroceryExp}</div>\n            <div>Personal Necessary: ${totalNecessaryExp}</div>\n            <div>Personal Unnecessary: ${totalUnnecessaryExp}</div>\n            <div>Other: ${totalOtherExp}</div>\n            <div>Investment: ${totalInvestExp}</div>\n            <div>Total deposits: ${totalDeposits}</div> \n            <div>Net Dinero: ${totalDeposits-totalExpenses}</div> \n        </>\n    )\n}\n\nexport default IndexExpenses\n\n "]},"metadata":{},"sourceType":"module"}